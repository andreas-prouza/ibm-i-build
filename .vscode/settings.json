{
    "makefile.extensionOutputFolder": "./.vscode",
    "emeraldwalk.runonsave": {
        "commands": [
            {
                "match": ".*$",
                "isAsync": true,
                "cmd": "if [[ \"${workspaceFolder}\" == '' ]]; then \n echo 'Wrong local workspace folder \"${workspaceFolder}\"!!'\nelse\n rsync -av --rsync-path=/QOpenSys/pkgs/bin/rsync --exclude={'.git','.vscode','.project','.gitignore'} --delete \"${workspaceFolder}/\" academy:~/myproject4/ \nfi"
            }
        ]
    },
    "command-runner.terminal.name": "Sync project",
    "command-runner.terminal.autoClear": true,
    "command-runner.terminal.autoFocus": true,
    "command-runner.commands": {
        "test": "if [[ \"${workspaceFolder}\" == '' ]]; then \n echo 'Wrong local workspace folder \"${workspaceFolder}\"!!'\nelse\n echo OK\nfi",
        "Sync source to IBM i": "if [[ \"${workspaceFolder}\" == '' ]]; then \n echo 'Wrong local workspace folder \"${workspaceFolder}\"!!'\nelse\n rsync -av --rsync-path=/QOpenSys/pkgs/bin/rsync --exclude={'.git','.vscode','.project','.gitignore'} --delete \"${workspaceFolder}/\" academy:~/myproject4/ \nfi",
        "Sync logs back": "if [[ \"${workspaceFolder}\" == '' ]]; then \n echo 'Wrong local workspace folder \"${workspaceFolder}\"!!'\nelse\n rsync -avz --rsync-path=/QOpenSys/pkgs/bin/rsync --include={'logs/***','build/***'} --exclude='*' --delete academy:~/myproject4/  \"${workspaceFolder}/\" \nfi",
        "Run build (summary output)": [
            "if [[ \"${workspaceFolder}\" == '' ]]; then \n echo 'Wrong local workspace folder \"${workspaceFolder}\"!!'\nelse\n printf '#!/QOpenSys/pkgs/bin/bash'\"\\n\\n\" > compile.sh ; : '",
            "'; make all -n | tee >(grep -iv crtcmd >> compile.sh) | grep -i crtcmd\\|summary | cut -d '|' --output-delimiter ': ' -f 2 ; : '",
            "'; rsync -av --rsync-path=/QOpenSys/pkgs/bin/rsync --exclude={'.git','.vscode','.project','.gitignore'} --delete \"${workspaceFolder}/\" academy:~/myproject4/; : '",
            "'; ssh academy \"source .profile; cd ~/myproject4; ./compile.sh || true \" ; : '",
            "'; rsync -avz --rsync-path=/QOpenSys/pkgs/bin/rsync --include={'logs/***','build/***'} --exclude='*' --delete academy:~/myproject4/  \"${workspaceFolder}/\" | grep -v \"^deleting\" | grep joblog \nfi"
        ],
        "Run build (detailed output)": [
            "if [[ \"${workspaceFolder}\" == '' ]]; then \n echo 'Wrong local workspace folder \"${workspaceFolder}\"!!'\nelse\n printf '#!/QOpenSys/pkgs/bin/bash'\"\\n\\n\" > compile.sh ; : '",
            "'; make all -n | tee >(grep -iv crtcmd >> compile.sh) | grep -i crtcmd | cut -d '|' --output-delimiter ': ' -f 2,3 ; : '",
            "'; rsync -av --rsync-path=/QOpenSys/pkgs/bin/rsync --exclude={'.git','.vscode','.project','.gitignore'} --delete \"${workspaceFolder}/\" academy:~/myproject4/; : '",
            "'; ssh academy \"source .profile; cd ~/myproject4; ./compile.sh || true \" ; : '",
            "'; rsync -avz --rsync-path=/QOpenSys/pkgs/bin/rsync --include={'logs/***','build/***'} --exclude='*' --delete academy:~/myproject4/  \"${workspaceFolder}/\" | grep -v \"^deleting\" | grep joblog \nfi"
        ],
        "Run build (debug)": [
            "if [[ \"${workspaceFolder}\" == '' ]]; then \n echo 'Wrong local workspace folder \"${workspaceFolder}\"!!'\nelse\n printf '#!/QOpenSys/pkgs/bin/bash'\"\\n\\nset -x\\n\\n\" > compile.sh ; : '",
            "'; make all -n | tee >(grep -iv crtcmd >> compile.sh) ; : '",
            "'; rsync -av --rsync-path=/QOpenSys/pkgs/bin/rsync --exclude={'.git','.vscode','.project','.gitignore'} --delete \"${workspaceFolder}/\" academy:~/myproject4/; : '",
            "'; ssh academy \"source .profile; cd ~/myproject4; ./compile.sh || true \" ; : '",
            "'; rsync -avz --rsync-path=/QOpenSys/pkgs/bin/rsync --include={'logs/***','build/***'} --exclude='*' --delete academy:~/myproject4/  \"${workspaceFolder}/\" | grep -v \"^deleting\" | grep joblog \nfi"
        ],
        "Reset ALL": "make clean",
        "Show Change Debug": "make all -n |grep crtcmd  ",
        "Show Change Compile": "make all -n |grep crtcmd | cut -d '|' --output-delimiter ': ' -f 2,3 ",
        "Show Change Object":  "make all -n |grep crtcmd | cut -d '|' --output-delimiter ': ' -f 2 "
    }
}